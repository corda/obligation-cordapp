repositories {
    mavenLocal()
    jcenter()
    mavenCentral()
    maven { url 'https://dl.bintray.com/kotlin/exposed' }
    maven { url 'https://jitpack.io' }
    maven { url 'https://ci-artifactory.corda.r3cev.com/artifactory/corda-releases' }
}

apply plugin: 'java'
apply plugin: 'net.corda.plugins.cordapp'
apply plugin: 'net.corda.plugins.cordformation'
apply plugin: 'net.corda.plugins.quasar-utils'

sourceSets {
    main {
        resources {
            srcDir "../config/dev"
        }
    }
    test {
        resources {
            srcDir "../config/test"
        }
    }
    integrationTest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/integrationTest/java')
        }
    }
}

configurations {
    integrationTestCompile.extendsFrom testCompile
    integrationTestRuntime.extendsFrom testRuntime
}

dependencies {
    testCompile "junit:junit:$junit_version"

    // Corda integration dependencies
    cordaCompile "$corda_release_group:corda-core:$corda_release_version"
    cordaCompile "$corda_release_group:corda-finance:$corda_release_version"
    cordaCompile "$corda_release_group:corda-jackson:$corda_release_version"
    cordaCompile "$corda_release_group:corda-rpc:$corda_release_version"
    cordaCompile "$corda_release_group:corda-webserver-impl:$corda_release_version"
    cordaRuntime "$corda_release_group:corda:$corda_release_version"
    cordaRuntime "$corda_release_group:corda-webserver:$corda_release_version"

    testCompile "$corda_release_group:corda-node-driver:$corda_release_version"

    // CorDapp dependencies
    // Specify your cordapp's dependencies below, including dependent CorDapps
    cordapp "$corda_release_group:corda-finance:$corda_release_version"
}

tasks.withType(JavaCompile) {
    options.compilerArgs << "-parameters" // Required for shell commands.
}

task deployNodes(type: net.corda.plugins.Cordform, dependsOn: ['jar']) {
    ext.rpcUsers = [
            ['username' : "user",
             'password' : "password",
             'permissions' : ["ALL"
             ]]
    ]
    directory "./build/nodes"
    node {
        name "CN=Notary,O=Notary,L=London,C=GB"
        notary = [validating : true]
        p2pPort 10002
        rpcSettings {
            address("localhost:10003")
            adminAddress("localhost:10021")
        }
        rpcUsers = ext.rpcUsers
        webPort 10004
        cordapps = ["$corda_release_group:corda-finance:$corda_release_version"]

    }
    node {
        name "CN=PartyA,O=PartyA,L=London,C=GB"
        p2pPort 10005
        rpcSettings {
            address("localhost:10006")
            adminAddress("localhost:10031")
        }
        rpcUsers = ext.rpcUsers
        webPort 10007
        cordapps = ["$corda_release_group:corda-finance:$corda_release_version"]
    }
    node {
        name "CN=PartyB,O=PartyB,L=London,C=GB"
        p2pPort 10008
        rpcSettings {
            address("localhost:10009")
            adminAddress("localhost:10041")
        }
        rpcUsers = ext.rpcUsers
        webPort 10010
        cordapps = ["$corda_release_group:corda-finance:$corda_release_version"]
    }
    node {
        name "CN=PartyC,O=PartyC,L=London,C=GB"
        p2pPort 10011
        rpcSettings {
            address("localhost:10012")
            adminAddress("localhost:10051")
        }
        rpcUsers = ext.rpcUsers
        webPort 10013
        cordapps = ["$corda_release_group:corda-finance:$corda_release_version"]
    }
}
